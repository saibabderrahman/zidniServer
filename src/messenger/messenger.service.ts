import { Injectable } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { InjectRepository } from '@nestjs/typeorm';
import axios from 'axios';
import { MessengerRegistrationState } from 'src/typeorm/entities';
import { Repository } from 'typeorm';

@Injectable()
export class MessengerService {
  private commandDB: { [key: string]: string } = {
    '1': `โ ุฅููู ุชูุงุตูู ูุณูุฑุฉ ุนู ุงูุฏูุฑุฉ : 
 
-  ููุฏู ุจุฑูุงูุฌ ุฑุญูุฉ ุงูุณุชูู ุญุฒุจุง ุฅูู ุญูุธ ุงููุฑุขู ุงููุฑูู ูุงููุง ุนู ุธูุฑ ููุจ ุจุฃุญูุงูู ู ุชุฏุจุฑู 
ุนู ุทุฑูู ุชูููุฉ ู ุฏุนู ุงููุฏุฑุงุช ุงูุนูููุฉ ู ุงููุบููุฉ ู ุงููุนุฑููุฉ ูููุดุชุฑููู ู ุงููุดุชุฑูุงุช ุ ุญูุซ ุชุดูู ุงูุญูุธ ูุงูุชุฑููุฒ ูุฑูุน ูุณุชูู ููุงุกุฉ ุนูู ุฐุงูุฑุชูู .  
 
โ ููุงุฑุงุช ุงูุญูุธ ุงูุจุตุฑู 
โ ููุงุฑุงุช ุงูุญูุธ ุงูุณูุนู 
โ ููุงุฑุงุช ุงูุญูุธ ุงูุฑููู 
โ ููุงุฑุงุช ุงูุจูุงุก ุงูุตูุฑู 
โ ููุงุฑุงุช ุงููุฑุงุกุฉ ุงูุชุฏุจุฑูุฉ  
โ ููุงุฑุงุช ุงูุนูู ุงููุฑุขูู  
 
โโจ ุงูุชููู ูู ุญูุธ ุงูุตูุญุงุช ุงููุฑุขููุฉ ุจุณุฑุนุฉ ู ูุชุนุฉ ู ุจุฅุชูุงู ุชุงู  
โโจ ุฑูุน ูุณุชููุงุช ุงูุฐุงูุฑุฉ ุงูุณูุนูุฉ ู ุงูุจุตุฑูุฉ ุชุฏุฑูุฌูุง ุนู ุทุฑูู ุชุฏุฑูุจุงุช ุฐูููุฉ ููููุฉ ููุฏุฉ 8 ุฃุดูุฑ  
โโจ ุชูููู ุงูุทุงูุจ ูู ุงูููู ุงูุณุฑูุน ููุขูุงุช ูู ุงูุตูุญุฉ ู ุฑุจุทูุง ุจุฃุณุงููุช ููุชุนุฉ  
 
โโจ ุญู ูุดุงูู ุงููุณูุงู ู ุงูุชูุฑุงุฑ ูุทุนูุง ุนูููุง ู ุนูููุง 
 
โโจ  ุญู ูุดุงูู ุงูุดุฑูุฏ ุงูุฐููู ูุงูุณุฑุญุงู ุทุจูุง ู ุนูููุง 

โโจ  21 ูุญุงุถุฑุฉ ุจูุงุฆูุฉ ุนูููุฉ ู ุนูููุฉ ุ ุชุนูู ุนูู ุญู ุฌููุน ุงููุดุงูู ุงูุชู ุชูุงุฌู ุงููุชุฏุฑุจูู ู ุงููุชุฏุฑุจุงุช ุฃุซูุงุก ุฑุญูุฉ ุญูุธ ุงููุฑุขู ุงููุฑูู ูุงููุง  
 
โโจ ุงูุชุฎูุต ูู ูุดุงูู ุถุนู ุงููุฑุงุกุฉ ู ุฑูุน ูุณุชูู ุฃุญูุงู ุงูุชุฌููุฏ ู ุงูุชูุงูุฉ ุนู ุทุฑูู 20 ุฏุฑุณ ููุตู ูู ุงูุทูุงูุฉ ุงููุฑุขููุฉ 

โโจ ุจุซูุซ ูุจุงุดุฑุฉ ูุชุตุญูุญ ุฃุญูุงู ุงูุชูุงูุฉ
1. โโจ ุงูุนุฑุถ ุงููููู ูููุญููุธ : 
_ ูููู ุจุนุฏ ุฅูุชุณุงุจ ุงูููุงุฑุงุช ุงูุณูุนูุฉ ู ุงูุจุตุฑูุฉ ูููุง ุ ุฃู ุจุนุฏ ุฅุชูุงู ุงูุฎุชูุฉ ุงูุฃููู ูููุฑุขู ุงููุฑูู ู ุงูุชุฎุฑุฌ ูู ูุงุฏุฉ ุฃุญูุงู ุงูุชุฌููุฏ.  
ุนุจุฑ ุงูุชุทุจูู ุงูุฎุงุต ุจุฃูุงุฏูููุฉ ุฒุฏูู ุนููุง ููุชุฏุฑูุจ ู ุงูุชูููู ุฃู ุจุทุฑููุฉ ูุฑุฏูุฉ ูู ุญุตุต ุฎุตูุตูุฉ ูุฎุชุงุฑูุง ุงูุทุงูุจ .
  
_ ูุง ููุชูู ุงูุทุงูุจ ูู ููุงุฑุฉ ุฅูู ุฃุฎุฑู ุฃุนูู ูููุง ุ ุฃู ูู ูุณุชูู ุฅูู ูุณุชูู ุฃุนูู ููู ุ ุฅูุง ุฅุฐุง ูุงู ุฅูุฌุงุฒู ุนูู ุงูุฃูู ูุตู ุงููุทููุจ ู ุจุฅุชูุงู ูุฏุฑู ุนูู ุงูุฃูู 90 % .
2. โโจ ุญุงูุฉ ุฎุงุตุฉ : 
__ ูู ุญุงูุฉ ุฃู ุงููุชุฏุฑุจ ูู ูุชููู ูู ุงูุจุฑูุงูุฌ ุงูููุงุฑู ุงูุฎุงุต ุจุญูุธ ุงููุฑุขู ุงููุฑูู ูุงููุง ุ ููุถุน ูู ุจุฑูุงูุฌ ุฎุงุต ุญุณุจ ุฅุณุชุทุงุนุชู ู ุงูููุช ุงูุซุงุจุช  ุงูุฐู ุฎุตุตู ูุญูุธ ุงููุฑุขู ุงููุฑูู ู ุชุนูู ุฃุญูุงู ุงูุชุฌููุฏ 

โโจ ูู ุงูุญุงูุงุช ุงูุฎุงุตุฉ : ุชูุถุน ุจุฑุงูุฌ ุฎุงุตุฉ ูููู ุงููุทููุจ ุงูุฃุฏูู ูููุง : ุญูุธ ุขูุชูู ููููุง .`,
    '2': `
    โฑ ูุฏุฉ ุงูุฏูุฑุฉ : 8_ุฃุดูุฑ ุ ููุณูุฉ ูุงูุชุงูู : 
๐ด 21_ููู : ุชุญุถูุฑ ูุฐูุฑุฉ ุฑุญูุฉ ุงูุณุชูู ุญุฒุจุง ุชูููุงุช + ูุญุงุถุฑุงุช ุนูููุฉ ุจูุงุฆูุฉ 
๐ด 6_ุฃุดูุฑ : ุชุดูู : 
๐ฅ ุงูุฎุชูุฉ ุงูุฃููู ูููุฑุขู ุงููุฑูู ูุน ุฅูุชุณุงุจ 12 ููุงุฑุฉ ุณูุนูุฉ ู 12 ููุงุฑุฉ ุจุตุฑูุฉ ูู ุงูุญูุธ ุงูุณุฑูุน . 
๐ฅ ุฏุฑุงุณุฉ ุฃุญูุงู ุงูุชุฌููุฏ ุ ุนูู ุฃุฑุจุน ูุณุชููุงุช . 
๐ด ูู ุดูุฑุงู ุฅูู 4 ุฃุดูุฑ : ุฎุชูุฉ ุนุฑุถ ุงููุญููุธ ู ุซุจูุชู ูุน ุชุตุญูุญ ุงูุชูุงูุฉ ุ ุฅุฎุชุจุงุฑุงุช ุฃุณุจูุนูุฉ ู ุดูุฑูุฉ ุญุณุจ ุจุฑูุงูุฌ ุงูุทุงูุจ .
1. ุชูููุช ุงูุฏุฑุงุณุฉ ูููู : ููููุง 
๐ฅ ุจุนุฏ ุตูุงุฉ ุงููุฌุฑ 
๐ฅ ุจุนุฏ ุตูุงุฉ ุงูุนุดุงุก`,
    '3': 'ุณุนุฑ ุงูุฏูุฑุฉ 5000 ุฏุฌ ุชุฏูุน ูุฑุฉ ูุงุญุฏุฉ',
    '4': `ููุชุณุฌูู ูู ุจูุณุฎ ุงูุฑุณุงูุฉ ุงูุชุงููุฉ ู ููุฃ ูุนูููุงุชู ุนูููุง : 
ุงูุฅุณู : 
ุงูููุจ : 
ุงูุนูุฑ : 
ุงููุณุชูู ุงูุฏุฑุงุณู : 
ูุณุชูู ุฃุญูุงู ุงูุชุฌููุฏ : 
ููุฏุงุฑ ูุญููุธู : 
ุงูุฑูุงูุฉ ุงูุชู ุชูุฑุฃ ุจูุง : 
ุงูุนููุงู : 
 โ ุถุฑูุฑู ูุชุงุจุฉ ุงูุนููุงู ูุฅุฑุณุงู ุงูุดูุงุฏุงุช ู ุงูุชูุฑููุงุช `,
    '5': 'ูุฑูู ุงูุฏุนู ุนูู ุงูุชูููุฌุฑุงู: @Baraahind  @ostadameriem',
  };

  constructor(private configService: ConfigService ,
    @InjectRepository(MessengerRegistrationState) private readonly registrationStateRepository: Repository<MessengerRegistrationState>,

  ) {}

  async handleMessage(senderPsid: string, receivedMessage: any): Promise<void> {
    let response;
    let state = await this.findByCHatIDMessenger(senderPsid)
    if(!state){
      const newstate = this.registrationStateRepository.create({ chatId:senderPsid, step: 'fullName', data:{} });
      await this.registrationStateRepository.save(newstate)}
    if (receivedMessage.text) {
      const text = receivedMessage.text.trim();
      if (this.commandDB[text]) {
        response = { text: this.commandDB[text] };
        await this.callSendAPI(senderPsid, response);
        await this.callSendAPI(senderPsid, {
          text: ` ๐ฅูุฑุฌู ุงูุฑุฏ ุจุงุณุชุฎุฏุงู ุงูุฃุฑูุงู 1 2 3 4 5 ...
1. ููุนุฑูุฉ ุชูุงุตูู ุงูุจุฑูุงูุฌ
2. ูุฏุฉ ุงูุจุฑูุงูุฌ
3. ุณุนุฑ ุงูุจุฑูุงูุฌ
4. ุทุฑููุฉ ุงูุชุณุฌูู
5. ูุฑูู ุงูุฏุนู ุนูู ุงูุชูููุฌุฑุงู`});

      } else {
        if(!state){
          await this.sendAudio(senderPsid,"https://utfs.io/f/9c72c64f-4ea0-45f6-8584-1abfcdd74f16-1jgvrq.mp3")
          await this.sendVideo(senderPsid,"https://utfs.io/f/b30ab2ae-cf5e-4cb4-a2e5-3fbd86357be7-sir090.mp4")
          response = {
            text: `ูุฑุญุจุง ุจู โค ุ ูุณุนุฏูุง ุนูู ุชูุงุตูู ูุน ูุฑูู ุงูุฏุนู ูุฃูุงุฏูููุฉ ุฒุฏูู ุนููุง ููุชุฏุฑูุจ ู ุงูุชูููู ุ ููุฏุฑ ุงูุชูุงูู ุจูุชุงุจ ุงููู.  
                     ๐ฅูุฑุฌู ุงูุฑุฏ ุจุงุณุชุฎุฏุงู ุงูุฃุฑูุงู 1_ 2_3...
 1. ููุนุฑูุฉ ุชูุงุตูู ุงูุจุฑูุงูุฌ
 2. ูุฏุฉ ุงูุจุฑูุงูุฌ
 3. ุณุนุฑ ุงูุจุฑูุงูุฌ
 4. ุทุฑููุฉ ุงูุชุณุฌูู
 5. ูุฑูู ุงูุฏุนู ุนูู ุงูุชูููุฌุฑุงู`,
          };
        }
      }
    } 

  }

  async handlePostback(senderPsid: string, receivedPostback: any): Promise<void> {
    const payload = receivedPostback.payload;
    let response;

    if (payload === 'yes') {
      response = { text: 'Thanks!' };
    } else if (payload === 'no') {
      response = { text: 'Oops, try sending another message.' };
    }

    await this.callSendAPI(senderPsid, response);
  }

  private async callSendAPI(senderPsid: string, response: any): Promise<void> {
    const PAGE_ACCESS_TOKEN = this.configService.get<string>('PAGE_ACCESS_TOKEN');

    const requestBody = {
      recipient: {
        id: senderPsid,
      },
      message: response,
    };

    try {
      await axios.post(
        `https://graph.facebook.com/v12.0/me/messages?access_token=${PAGE_ACCESS_TOKEN}`,
        requestBody,
      );
    } catch (error) {
      console.error('Unable to send message:', error);
    }
  }

  async findByCHatIDMessenger(chatId:string):Promise<MessengerRegistrationState>{
    try {
      let state = await this.registrationStateRepository.findOne({ where: { chatId  } });
      return state
    } catch (error) {

    }
  }

  private async sendVideo(senderPsid: string, videoUrl: string): Promise<void> {
    const PAGE_ACCESS_TOKEN = this.configService.get<string>('PAGE_ACCESS_TOKEN');

    const requestBody = {
      recipient: {
        id: senderPsid,
      },
      message: {
        attachment: {
          type: 'video',
          payload: {
            url: videoUrl,
            is_reusable: true
          }
        }
      }
    };

    try {
      await axios.post(
        `https://graph.facebook.com/v12.0/me/messages?access_token=${PAGE_ACCESS_TOKEN}`,
        requestBody,
      );
    } catch (error) {
      console.error('Unable to send audio:', error.response.data);
    }
  }

  private async sendAudio(senderPsid: string, audioUrl: string): Promise<void> {
    const PAGE_ACCESS_TOKEN = this.configService.get<string>('PAGE_ACCESS_TOKEN');

    const requestBody = {
      recipient: {
        id: senderPsid,
      },
      message: {
        attachment: {
          type: 'audio',
          payload: {
            url: audioUrl,
            is_reusable: true
          }
        }
      }
    };

    try {
      await axios.post(
        `https://graph.facebook.com/v12.0/me/messages?access_token=${PAGE_ACCESS_TOKEN}`,
        requestBody,
      );
    } catch (error) {
      console.error('Unable to send audio:', error.response.data);
    }
  }

}
